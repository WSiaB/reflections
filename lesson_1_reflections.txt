How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Found the spelling error since the original file worked correctly.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Would allow rolling back changes for testing purposes. Would also allow looking at changes made throughout history to see where a bug may have been introduced.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    A pro is you can be sure code works before commit. A con is if there are not enough commits allowing a large number of changes in between. 

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    I imagine it is because Git is for software development which means changes may span multiple files.

How can you use the commands git log and git diff to view the history of files?

    'git log' shows the commit log and 'git diff' shows file (or commit) differences

How might using version control make you more confident to make changes that
could break something?

    Since your changes are only local and can be rolled back.

Now that you have your workspace set up, what do you want to try using Git for?

    I want to create some projects to show my programming skills.