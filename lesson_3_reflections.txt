When would you want to create a remote repository rather than keeping all your work local?

	When others might need to access the code to work on it concurrently.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

	This could overwrite changes you are working on.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

	A fork duplicates a repository on the GitHub server. A clone copies a repository, either from server to local or local to local. A branch allows changes to code without changing the master (until done and you merge brances).

What is the benefit of having a copy of the last known state of the remote stored locally?

	It allows you to merge from it to you and the updated remote copy,

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

	I imagine with something like http://collabedit.com/ or https://kobra.io/#/ which has the advantage of real-time collaboration. It would be easier initially, but can become a problem when too many people are trying to change a file at the same time.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

	This allows experimenting without breaking the master. You can test new features and bug fixes and if they work out they can be merged back into master or if not they can be dropped. All this without breaking the functionality of the master.

